#!/bin/bash

set -e

default_install_path="$HOME/.local/bin"
install_path="${1:-$default_install_path}"

auth_header=""
if [[ -n "$GITHUB_TOKEN" ]]; then
  auth_header="Authorization: Bearer $GITHUB_TOKEN"
fi

get_arch() {
  local mode=$1
  local arch && arch=$(uname -m)
  case $arch in
  x86_64)
    if [[ $mode == "standard" ]]; then
      printf "x86_64"
    else
      printf "x64"
    fi
    ;;
  arm64)
    printf "arm64"
    ;;
  *)
    printf "Unsupported architecture: %s\n" "$arch"
    exit 1
    ;;
  esac
}

create_tmp_dir() {
  local base_dir="/tmp"
  local prefix=$1
  local tmp_dir && tmp_dir=$(mktemp -d -p "$base_dir" "${prefix}.XXXXXXXXXX")
  printf "%s" "$tmp_dir"
}

install_or_update_tool() {
  local tool_name=$1
  local url=$2
  local tmp_dir=$3
  local final_dir=$4
  local tar_file="${tmp_dir}/${tool_name}.tgz"

  printf "Remove previously installed version if exists from %s\n" "$final_dir"
  rm -rf "${final_dir:?}"

  printf "Downloading %s from %s to %s\n" "$tool_name" "$url" "$tar_file"
  curl -L "$url" -o "$tar_file"
  mkdir -p "$final_dir"
  tar -xz -f "$tar_file" -C "$final_dir" --strip-components=1
  printf "%s installed in %s\n\n" "$tool_name" "$final_dir"
  rm -rf "$tmp_dir"
}

install_or_update_mongosh() {
  local final_dir=$1
  local arch && arch=$(get_arch)
  local tmp_dir && tmp_dir=$(create_tmp_dir "mongosh")
  local version_tag && version_tag=$(curl -s -H "$auth_header" https://api.github.com/repos/mongodb-js/mongosh/releases/latest | grep tag_name | cut -d '"' -f 4)
  local version=${version_tag#v}
  local url="https://github.com/mongodb-js/mongosh/releases/download/${version_tag}/mongosh-${version}-linux-${arch}.tgz"

  install_or_update_tool "mongosh" "$url" "$tmp_dir" "$final_dir"
}

install_or_update_mongodb_tools() {
  local final_dir=$1
  local arch && arch=$(get_arch "standard")
  local tmp_dir && tmp_dir=$(create_tmp_dir "mongodbtools")
  local latest_version && latest_version=$(curl -s -H "$auth_header" -H "Accept: application/vnd.github.v3+json" \
    https://api.github.com/repos/mongodb/mongo-tools/git/refs/tags |
    sed -nE "s/^.*\"ref\"\: \"refs\/tags\/r?([[:digit:]]{2,3}\.[[:digit:]]+\.[[:digit:]]+)\",$/\1/p" |
    sort -V | tail -n1)
  local url="https://fastdl.mongodb.org/tools/db/mongodb-database-tools-ubuntu2404-${arch}-${latest_version}.tgz"

  install_or_update_tool "mongodb-tools" "$url" "$tmp_dir" "$final_dir"
}

install_or_update_atlas_mongo_cli() {
  local base_final_dir=$1
  local arch && arch=$(get_arch "standard")

  local releases_json && releases_json=$(curl -s -H "$auth_header" https://api.github.com/repos/mongodb/mongodb-atlas-cli/releases)

  local atlas_release && atlas_release=$(printf "%s" "$releases_json" | jq -r '.[] | select(.name | test("MongoDB Atlas CLI")) | .tag_name' | head -n 1)
  local mongo_release && mongo_release=$(printf "%s" "$releases_json" | jq -r '.[] | select(.name | test("MongoDB CLI")) | .tag_name' | head -n 1)

  if [[ -n "$atlas_release" ]]; then
    local atlas_tmp_dir && atlas_tmp_dir=$(create_tmp_dir "atlascli")
    local atlas_final_dir="${base_final_dir}/atlas-cli"
    local atlas_version=${atlas_release#*/v}
    local atlas_url_encoded_version_tag="${atlas_release//\//%2F}"
    local atlas_url="https://github.com/mongodb/mongodb-atlas-cli/releases/download/${atlas_url_encoded_version_tag}/mongodb-atlas-cli_${atlas_version}_linux_${arch}.tar.gz"

    install_or_update_tool "atlas-cli" "$atlas_url" "$atlas_tmp_dir" "$atlas_final_dir"
  fi

  if [[ -n "$mongo_release" ]]; then
    local mongo_tmp_dir && mongo_tmp_dir=$(create_tmp_dir "mongocli")
    local mongo_final_dir="${base_final_dir}/mongo-cli"
    local mongo_version=${mongo_release#*/v}
    local mongo_url_encoded_version_tag="${mongo_release//\//%2F}"
    local mongo_url="https://github.com/mongodb/mongodb-atlas-cli/releases/download/${mongo_url_encoded_version_tag}/mongocli_${mongo_version}_linux_${arch}.tar.gz"

    install_or_update_tool "mongo-cli" "$mongo_url" "$mongo_tmp_dir" "$mongo_final_dir"
  fi
}

if [[ -z $1 ]]; then
  install_path="$default_install_path"
fi

install_or_update_mongosh "$install_path/mongosh"
install_or_update_mongodb_tools "$install_path/mongodb-tools"
install_or_update_atlas_mongo_cli "$install_path"
