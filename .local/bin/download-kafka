#!/usr/bin/env bash

set -e

download_kafka() {
  local version=$1
  local output_dir=$2
  local kafka_dir="kafka_2.13-${version}"

  local temp_dir
  temp_dir=$(mktemp -d -t kafka.XXXXXXXXXX)

  local main_url="https://downloads.apache.org/kafka/${version}/kafka_2.13-${version}.tgz"
  local archive_url="https://archive.apache.org/dist/kafka/${version}/kafka_2.13-${version}.tgz"

  curl -L "${main_url}" --create-dirs -o "${temp_dir}/kafka_2.13-${version}.tgz"
  if ! gzip -t "${temp_dir}/kafka_2.13-${version}.tgz" 2>/dev/null; then
    printf "Download failed or file corrupted from main site (%s). Trying archive site...\n" "${main_url}"
    curl -L "${archive_url}" --create-dirs -o "${temp_dir}/kafka_2.13-${version}.tgz"
    if ! gzip -t "${temp_dir}/kafka_2.13-${version}.tgz" 2>/dev/null; then
      printf "Download failed or file corrupted from archive site (%s). Please check the version and try again.\n" "${archive_url}"
      exit 1
    else
      printf "Download successful and file valid from archive site (%s).\n" "${archive_url}"
    fi
  else
    printf "Download successful and file valid from main site (%s).\n" "${main_url}"
  fi

  mkdir -p "${output_dir}"

  if [ -d "${output_dir}/${kafka_dir}" ]; then
    printf "Kafka (%s) exists inside the output dir (%s), the script will remove the old one.\n" "${kafka_dir}" "${output_dir}"
    rm -rf "${output_dir:?}/${kafka_dir}"
  fi

  tar -xzf "${temp_dir}/kafka_2.13-${version}.tgz" -C "${output_dir}"

  rm -rf "${temp_dir}"
}

download_kafka "${1}" "${HOME}/kafka"
